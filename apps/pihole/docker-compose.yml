version: '3.8'

services:

  pihole:
    image: pihole/pihole:2025.10.0
    ports:
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
      - target: 80
        published: 8090
        protocol: tcp
        mode: host
    environment:
      - TZ=America/New_York
      - FTLCONF_webserver_api_password=
      # This must be set in /etc/pihole/pihole-FTL.conf once created.
      # - RATE_LIMIT=0/0
    volumes:
      - pihole-data:/etc/pihole
      - pihole-dnsmasq:/etc/dnsmasq.d
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #cap_add:
    #  - NET_ADMIN
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.platform.arch == aarch64
      labels:
#        - traefik.enable=true
        - traefik.http.routers.pihole.rule=Host(`pihole.lab.omglolwtfbbq.com`)
        - traefik.http.routers.pihole.entrypoints=web-secure
        - traefik.http.routers.pihole.tls.certResolver=primary
        - traefik.http.routers.pihole.tls.domains[0].main=*.lab.omglolwtfbbq.com
        - traefik.http.services.pihole.loadbalancer.server.port=80
        - traefik.tcp.routers.pihole-tcp.rule=HostSNI(`*`)
        - traefik.tcp.routers.pihole-tcp.entrypoints=dns-tcp
        - traefik.tcp.routers.pihole-tcp.service=pihole-tcp
        - traefik.tcp.routers.pihole-tcp.tls.certResolver=primary
        - traefik.tcp.routers.pihole-tcp.tls.domains[0].main=*.lab.omglolwtfbbq.com
        - traefik.tcp.services.pihole-tcp.loadbalancer.server.port=53
        - traefik.udp.routers.pihole-udp.entrypoints=dns-udp
        - traefik.udp.routers.pihole-udp.service=pihole-udp
        - traefik.udp.services.pihole-udp.loadbalancer.server.port=53
#        - traefik.udp.services.pihole-udp.loadbalancer.passhostheader=true
#        - traefik.udp.services.pihole-udp.passhostheader=true

  pihole-exporter:
    image: ekofr/pihole-exporter:v1.0.1
    environment:
      - PIHOLE_HOSTNAME=192.168.1.51,192.168.1.52,192.168.1.53
      - PIHOLE_PORT=8090
    deploy:
      placement:
        constraints:
          - node.platform.arch == aarch64
      labels:
        - prometheus.swarm.enable=true
        - prometheus.swarm.port=9617

  nebula-sync:
    image: ghcr.io/lovelaze/nebula-sync:v0.11.0
    environment:
    - PRIMARY=http://192.168.1.51:8090|
    - REPLICAS=http://192.168.1.52:8090|,http://192.168.1.53:8090|
    - FULL_SYNC=true
    - RUN_GRAVITY=true
#    - CRON=0 * * * *
    deploy:
      placement:
        constraints:
          - node.platform.arch == aarch64
      restart_policy:
        condition: none
      replicas: 0 # none by default; created when cron hits
      labels:
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=15 5 * * mon

volumes:
  pihole-data:
#    driver: local
#    driver_opts:
#      type: nfs4
#      o: addr=192.168.42.11,rw
#      device: ":/mnt/hdd/share/apps/pihole/pihole"
  pihole-dnsmasq:
#    driver: local
#    driver_opts:
#      type: nfs4
#      o: addr=192.168.42.11,rw
#      device: ":/mnt/hdd/share/apps/pihole/dnsmasq"
